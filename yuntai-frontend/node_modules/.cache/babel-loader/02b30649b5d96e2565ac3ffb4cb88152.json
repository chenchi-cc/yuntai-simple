{"remainingRequest":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/babel-loader/lib/index.js!/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue","mtime":1749371730735},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/babel.config.js","mtime":1672390160000},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/babel-loader/lib/index.js","mtime":1749371729596},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js","mtime":1749371729670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY2hlbmNoaTAzL0lkZWFQcm9qZWN0cy95dW50YWktZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0IHsgZGVlcE1lcmdlIH0gZnJvbSAnQGppYW1pbmdoaS9jaGFydHMvbGliL3V0aWwvaW5kZXgnOwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAamlhbWluZ2hpL2MtcmVuZGVyL2xpYi9wbHVnaW4vdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRHZDYXBzdWxlQ2hhcnQnLAogIHByb3BzOiB7CiAgICBjb25maWc6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZWZhdWx0Q29uZmlnOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENhcHN1bGUgY2hhcnQgZGF0YQogICAgICAgICAqIEB0eXBlIHtBcnJheTxPYmplY3Q+fQogICAgICAgICAqIEBkZWZhdWx0IGRhdGEgPSBbXQogICAgICAgICAqIEBleGFtcGxlIGRhdGEgPSBbeyBuYW1lOiAnZm9vMScsIHZhbHVlOiAxMDAgfSwgeyBuYW1lOiAnZm9vMicsIHZhbHVlOiAxMDAgfV0KICAgICAgICAgKi8KICAgICAgICBkYXRhOiBbXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29sb3JzIChoZXh8cmdifHJnYmF8Y29sb3Iga2V5d29yZHMpCiAgICAgICAgICogQHR5cGUge0FycmF5PFN0cmluZz59CiAgICAgICAgICogQGRlZmF1bHQgY29sb3IgPSBbJyMzN2EyZGEnLCAnIzMyYzVlOScsICcjNjdlMGUzJywgJyM5ZmU2YjgnLCAnI2ZmZGI1YycsICcjZmY5ZjdmJywgJyNmYjcyOTMnXQogICAgICAgICAqIEBleGFtcGxlIGNvbG9yID0gWycjMDAwJywgJ3JnYigwLCAwLCAwKScsICdyZ2JhKDAsIDAsIDAsIDEpJywgJ3JlZCddCiAgICAgICAgICovCiAgICAgICAgY29sb3JzOiBbJyMzN2EyZGEnLCAnIzMyYzVlOScsICcjNjdlMGUzJywgJyM5ZmU2YjgnLCAnI2ZmZGI1YycsICcjZmY5ZjdmJywgJyNmYjcyOTMnXSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgdW5pdAogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdW5pdCA9ICcnCiAgICAgICAgICovCiAgICAgICAgdW5pdDogJycsCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uIFNob3cgaXRlbSB2YWx1ZQogICAgICAgICAqIEB0eXBlIHtCb29sZWFufQogICAgICAgICAqIEBkZWZhdWx0IHNob3dWYWx1ZSA9IGZhbHNlCiAgICAgICAgICovCiAgICAgICAgc2hvd1ZhbHVlOiBmYWxzZQogICAgICB9LAogICAgICBtZXJnZWRDb25maWc6IG51bGwsCiAgICAgIGNhcHN1bGVMZW5ndGg6IFtdLAogICAgICBjYXBzdWxlVmFsdWU6IFtdLAogICAgICBsYWJlbERhdGE6IFtdLAogICAgICBsYWJlbERhdGFMZW5ndGg6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGNvbmZpZzogZnVuY3Rpb24gY29uZmlnKCkgewogICAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgICBjYWxjRGF0YSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2FsY0RhdGE6IGZ1bmN0aW9uIGNhbGNEYXRhKCkgewogICAgICB2YXIgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhID0gdGhpcy5jYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGEoKTsKICAgIH0sCiAgICBtZXJnZUNvbmZpZzogZnVuY3Rpb24gbWVyZ2VDb25maWcoKSB7CiAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZywKICAgICAgICBkZWZhdWx0Q29uZmlnID0gdGhpcy5kZWZhdWx0Q29uZmlnOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGE6IGZ1bmN0aW9uIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhKCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMubWVyZ2VkQ29uZmlnLmRhdGE7CiAgICAgIGlmICghZGF0YS5sZW5ndGgpIHJldHVybjsKICAgICAgdmFyIGNhcHN1bGVWYWx1ZSA9IGRhdGEubWFwKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIHZhbHVlID0gX3JlZi52YWx1ZTsKICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgbWF4VmFsdWUgPSBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoY2Fwc3VsZVZhbHVlKSk7CiAgICAgIHRoaXMuY2Fwc3VsZVZhbHVlID0gY2Fwc3VsZVZhbHVlOwogICAgICB0aGlzLmNhcHN1bGVMZW5ndGggPSBjYXBzdWxlVmFsdWUubWFwKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuIG1heFZhbHVlID8gdiAvIG1heFZhbHVlIDogMDsKICAgICAgfSk7CiAgICAgIHZhciBvbmVGaWZ0aCA9IG1heFZhbHVlIC8gNTsKICAgICAgdmFyIGxhYmVsRGF0YSA9IEFycmF5LmZyb20obmV3IFNldChuZXcgQXJyYXkoNikuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICByZXR1cm4gTWF0aC5jZWlsKGkgKiBvbmVGaWZ0aCk7CiAgICAgIH0pKSk7CiAgICAgIHRoaXMubGFiZWxEYXRhID0gbGFiZWxEYXRhOwogICAgICB0aGlzLmxhYmVsRGF0YUxlbmd0aCA9IEFycmF5LmZyb20obGFiZWxEYXRhKS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gbWF4VmFsdWUgPyB2IC8gbWF4VmFsdWUgOiAwOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgY2FsY0RhdGEgPSB0aGlzLmNhbGNEYXRhOwogICAgY2FsY0RhdGEoKTsKICB9Cn07"},{"version":3,"names":["deepMerge","deepClone","name","props","config","type","Object","default","data","defaultConfig","colors","unit","showValue","mergedConfig","capsuleLength","capsuleValue","labelData","labelDataLength","watch","calcData","methods","mergeConfig","calcCapsuleLengthAndLabelData","length","map","_ref","value","maxValue","Math","max","apply","_toConsumableArray","v","oneFifth","Array","from","Set","fill","i","ceil","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div class=\"capsule-item\" v-for=\"(capsule, index) in capsuleLength\" :key=\"index\">\n          <div\n            class=\"capsule-item-column\"\n            :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"\n          >\n            <div\n              v-if=\"mergedConfig.showValue\"\n              class=\"capsule-item-value\"\n            >{{ capsuleValue[index] }}</div>\n          </div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div\n            v-for=\"(label, index) in labelData\"\n            :key=\"label + index\"\n          >{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: [\n          '#37a2da',\n          '#32c5e9',\n          '#67e0e3',\n          '#9fe6b8',\n          '#ffdb5c',\n          '#ff9f7f',\n          '#fb7293'\n        ],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: '',\n        /**\n         * @description Show item value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      capsuleValue: [],\n      labelData: [],\n      labelDataLength: []\n    }\n  },\n  watch: {\n    config() {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData() {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig() {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    calcCapsuleLengthAndLabelData() {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleValue = capsuleValue\n\n      this.capsuleLength = capsuleValue.map(v => (maxValue ? v / maxValue : 0))\n\n      const oneFifth = maxValue / 5\n\n      const labelData = Array.from(\n        new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))\n      )\n\n      this.labelData = labelData\n\n      this.labelDataLength = Array.from(labelData).map(v =>\n        maxValue ? v / maxValue : 0\n      )\n    }\n  },\n  mounted() {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAAA,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAA,SAAA;QAAA;MAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAD,IAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAE,MAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACA;AACA;AACA;AACA;AACA;QACAC,IAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;MACA;MAEAC,YAAA;MAEAC,aAAA;MACAC,YAAA;MACAC,SAAA;MACAC,eAAA;IACA;EACA;EACAC,KAAA;IACAd,MAAA,WAAAA,OAAA;MACA,IAAAe,QAAA,QAAAA,QAAA;MAEAA,QAAA;IACA;EACA;EACAC,OAAA;IACAD,QAAA,WAAAA,SAAA;MACA,IAAAE,WAAA,QAAAA,WAAA;QAAAC,6BAAA,QAAAA,6BAAA;MAEAD,WAAA;MAEAC,6BAAA;IACA;IACAD,WAAA,WAAAA,YAAA;MACA,IAAAjB,MAAA,QAAAA,MAAA;QAAAK,aAAA,QAAAA,aAAA;MAEA,KAAAI,YAAA,GAAAb,SAAA,CACAC,SAAA,CAAAQ,aAAA,SACAL,MAAA,MACA;IACA;IACAkB,6BAAA,WAAAA,8BAAA;MACA,IAAAd,IAAA,QAAAK,YAAA,CAAAL,IAAA;MAEA,KAAAA,IAAA,CAAAe,MAAA;MAEA,IAAAR,YAAA,GAAAP,IAAA,CAAAgB,GAAA,WAAAC,IAAA;QAAA,IAAAC,KAAA,GAAAD,IAAA,CAAAC,KAAA;QAAA,OAAAA,KAAA;MAAA;MAEA,IAAAC,QAAA,GAAAC,IAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAF,IAAA,EAAAG,kBAAA,CAAAhB,YAAA;MAEA,KAAAA,YAAA,GAAAA,YAAA;MAEA,KAAAD,aAAA,GAAAC,YAAA,CAAAS,GAAA,WAAAQ,CAAA;QAAA,OAAAL,QAAA,GAAAK,CAAA,GAAAL,QAAA;MAAA;MAEA,IAAAM,QAAA,GAAAN,QAAA;MAEA,IAAAX,SAAA,GAAAkB,KAAA,CAAAC,IAAA,CACA,IAAAC,GAAA,KAAAF,KAAA,IAAAG,IAAA,IAAAb,GAAA,WAAAQ,CAAA,EAAAM,CAAA;QAAA,OAAAV,IAAA,CAAAW,IAAA,CAAAD,CAAA,GAAAL,QAAA;MAAA,GACA;MAEA,KAAAjB,SAAA,GAAAA,SAAA;MAEA,KAAAC,eAAA,GAAAiB,KAAA,CAAAC,IAAA,CAAAnB,SAAA,EAAAQ,GAAA,WAAAQ,CAAA;QAAA,OACAL,QAAA,GAAAK,CAAA,GAAAL,QAAA;MAAA,CACA;IACA;EACA;EACAa,OAAA,WAAAA,QAAA;IACA,IAAArB,QAAA,QAAAA,QAAA;IAEAA,QAAA;EACA;AACA","ignoreList":[]}]}