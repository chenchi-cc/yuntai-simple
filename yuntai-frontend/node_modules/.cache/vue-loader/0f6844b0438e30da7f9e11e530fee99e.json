{"remainingRequest":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/schedule/scheduleList.vue?vue&type=style&index=0&id=267ddc23&scoped=true&lang=css","dependencies":[{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/schedule/scheduleList.vue","mtime":1672390192000},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/css-loader/dist/cjs.js","mtime":1749371729491},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1749371729849},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/postcss-loader/src/index.js","mtime":1749371729594},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js","mtime":1749371729670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGFibGVDc3MgewogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi10b3A6IDEwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2ViZWVmNTsKfQoKdGFibGU+dHI+dGggewogIHBhZGRpbmc6IDEwcHg7Cn0KCnRhYmxlPnRyPnRkIHsKICBwYWRkaW5nOiAxMHB4Owp9CgpidXR0b24gewogIG1hcmdpbjogMTBweDsKfQo="},{"version":3,"sources":["scheduleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"scheduleList.vue","sourceRoot":"src/views/schedule","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"operate-container\" shadow=\"never\">\n      <i class=\"el-icon-tickets\" style=\"margin-top: 5px\" />\n      <span style=\"margin-top: 5px\">任务列表</span>\n      <el-button class=\"btn-add\" size=\"mini\" @click=\"addJob\">添加任务</el-button>\n    </el-card>\n\n    <table class=\"tableCss\">\n      <tr style=\"text-align: center;\">\n        <th>任务ID</th>\n        <th>任务类型</th>\n        <th>任务名</th>\n        <th>任务组</th>\n        <th>是否是cron任务</th>\n        <th>cron表达式</th>\n        <th>执行周期</th>\n        <th>任务状态</th>\n        <th>操作</th>\n      </tr>\n      <tr v-for=\"item in allJobs\" style=\"text-align: center;\">\n        <td>{{ item.id }}</td>\n        <td>{{ item.jobType }}</td>\n        <td>{{ item.jobName }}</td>\n        <td>{{ item.jobGroup }}</td>\n        <td>{{ item.cronJob }}</td>\n        <td>{{ item.cronExpression }}</td>\n        <td>{{ item.repeatTime }} 秒</td>\n        <td>{{ item.jobStatus }}</td>\n        <td>\n          <button @click=\"deleteJob(item.id, item.jobName, item.jobGroup)\">删除任务</button>\n          <button v-if=\"item.jobStatus === '已暂停'\" @click=\"resumeJob(item.jobName, item.jobGroup)\">重启任务</button>\n          <button v-if=\"item.jobStatus === '运行中'\" @click=\"pauseJob(item.jobName, item.jobGroup)\">暂停任务</button>\n        </td>\n      </tr>\n    </table>\n\n    <el-dialog title=\"创建新任务\" :visible.sync=\"dialogVisible\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"作业列表\">\n          <el-select v-model=\"jobType\">\n            <el-option :key=\"'SimpleJob'\" :value=\"'简单任务(测试)'\"></el-option>\n            <el-option :key=\"'MySQLJob'\" :value=\"'MySQL数据监控任务'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"数据库名\" v-if=\"jobType === 'MySQL数据监控任务'\">\n          <el-select v-model=\"databaseName\">\n            <el-option :key=\"'gmall'\" :value=\"'gmall'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"表名\" v-if=\"jobType === 'MySQL数据监控任务'\">\n          <el-select v-model=\"tableName\">\n            <el-option :key=\"'table'\" :value=\"'yuntai_zuoyuan'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"字段名\" v-if=\"jobType === 'MySQL数据监控任务'\">\n          <el-select v-model=\"fieldName\">\n            <el-option :key=\"'age'\" :value=\"'age'\"></el-option>\n            <el-option :key=\"'height'\" :value=\"'height'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"任务\" v-if=\"jobType === 'MySQL数据监控任务'\">\n          <el-select v-model=\"MySQLJobType\">\n            <el-option :key=\"'nullRate'\" :value=\"'空值率'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"任务类型\">\n          <el-select v-model=\"cronJob\">\n            <el-option :key=\"'SimpleTypeJob'\" :value=\"'周期执行任务'\"></el-option>\n            <el-option :key=\"'CronTypeJob'\" :value=\"'Cron任务'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"执行周期\" v-if=\"cronJob === '周期执行任务'\">\n          <el-select v-model=\"repeatTime\">\n            <el-option :key=\"'TenSeconds'\" :value=\"'每10秒钟执行一次'\"></el-option>\n            <el-option :key=\"'OneMinute'\" :value=\"'每分钟执行一次'\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"Cron表达式\" v-if=\"cronJob === 'Cron任务'\">\n          <el-input v-model=\"cronExpression\" />\n        </el-form-item>\n        <el-form-item label=\"作业名\">\n          <el-input v-model=\"jobName\" />\n        </el-form-item>\n        <el-form-item label=\"组名\">\n          <el-input v-model=\"jobGroup\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button type=\"primary\" size=\"small\" @click=\"createJob\">创建新任务</el-button>\n        <el-button size=\"small\" @click=\"dialogVisible = false\">取消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport api from '@/api/schedule/schedule';\n\nexport default {\n  data() {\n    return {\n      allJobs: [],\n      dialogVisible: false,\n      jobName: '',\n      jobGroup: '',\n      jobType: '简单任务(测试)',\n      repeatTime: '每10秒钟执行一次',\n      cronJob: '周期执行任务',\n      cronExpression: '',\n      databaseName: 'gmall',\n      tableName: 'yuntai_zuoyuan',\n      fieldName: 'age',\n      MySQLJobType: '空值率',\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    // 加载banner列表数据\n    fetchData() {\n      api.getAllJobs().then(response => {\n        this.allJobs = response.data;\n      })\n    },\n    addJob() {\n      this.dialogVisible = true;\n    },\n    deleteJob(id, jobName, jobGroup) {\n      api.deleteJob(id, jobName, jobGroup).then(response => {\n        this.fetchData();\n      })\n    },\n    resumeJob(jobName, jobGroup) {\n      api.resumeJob(jobName, jobGroup).then(response => {\n        this.fetchData();\n      })\n    },\n    pauseJob(jobName, jobGroup) {\n      api.pauseJob(jobName, jobGroup).then(response => {\n        this.fetchData();\n      })\n    },\n    createJob() {\n      const data = {\n        jobName: this.jobName,\n        jobType: this.jobType,\n        jobGroup: this.jobGroup,\n        cronJob: this.cronJob === '周期执行任务' ? false : true,\n        cronExpression: this.cronExpression,\n        repeatTime: this.repeatTime === '每10秒钟执行一次' ? 10 : 60,\n      };\n\n      api.createJob(data, this.databaseName, this.tableName, this.fieldName).then(response => {\n        this.fetchData();\n        this.dialogVisible = false;\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.tableCss {\n  width: 100%;\n  margin-top: 10px;\n  border: 1px solid #ebeef5;\n}\n\ntable>tr>th {\n  padding: 10px;\n}\n\ntable>tr>td {\n  padding: 10px;\n}\n\nbutton {\n  margin: 10px;\n}\n</style>"]}]}