{"remainingRequest":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/real/keywordStats.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/real/keywordStats.vue","mtime":1672390202000},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/babel-loader/lib/index.js","mtime":1749371729596},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js","mtime":1749371729670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CmltcG9ydCBhcGkgZnJvbSAiQC9hcGkvc3RhdGlzdGljcy9yZWFsL3JlYWx0aW1lIjsKZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpbWl0OiAyMCwKICAgICAgY0RhdGE6IFtdLAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICB0b2RheTogJycKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWKoOi9vWJhbm5lcuWIl+ihqOaVsOaNrgogICAgaW5pdCgpIHsKICAgICAgdGhpcy5zZXRDaGFydERhdGEoKTsKICAgICAgYXBpLmdldEtleXdvcmRTdGF0cyh0aGlzLnRvZGF5LCB0aGlzLmxpbWl0KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgIHRoaXMuY0RhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHRoaXMuc2V0Q2hhcnREYXRhKCk7CiAgICAgIH0pCiAgICAgICAgLmNhdGNoKChyZXNwb25zZSkgPT4gewogICAgICAgICAgY29uc29sZS5sb2coIuWksei0pSIgKyByZXNwb25zZSk7CiAgICAgICAgfSk7CiAgICB9LAogICAgc2V0Q2hhcnREYXRhKCkgewogICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfng63or43lm74nCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAnd29yZENsb3VkJywKICAgICAgICAgIGdyaWRTaXplOiAyMCwKICAgICAgICAgIHNpemVSYW5nZTogWzEyLCA1MF0sCiAgICAgICAgICByb3RhdGlvblJhbmdlOiBbLTkwLCA5MF0sCiAgICAgICAgICBzaGFwZTogJ3BlbnRhZ29uJywKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBjb2xvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdyZ2IoJyArIFsKICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTYwKSwKICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTYwKSwKICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTYwKQogICAgICAgICAgICAgICAgXS5qb2luKCcsJykgKyAnKSc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAnIzMzMycKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHRoaXMuY0RhdGEKICAgICAgICB9XQogICAgICB9CiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImtleXdvcmRTdGF0c0NoYXJ0IikpOwogICAgICAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["keywordStats.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"keywordStats.vue","sourceRoot":"src/views/statistics/real","sourcesContent":["<template>\n  <el-row :gutter=\"24\" class=\"el-row\">\n    <el-col :span=\"24\" class=\"el-card\">\n      <div id=\"keywordStatsChart\" style=\"width: 100%; height: 280px\" />\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport api from \"@/api/statistics/real/realtime\";\nexport default {\n  mounted() {\n    this.init()\n  },\n  data() {\n    return {\n      limit: 20,\n      cData: [],\n    };\n  },\n  props: {\n    today: ''\n  },\n  methods: {\n    // 加载banner列表数据\n    init() {\n      this.setChartData();\n      api.getKeywordStats(this.today, this.limit).then((response) => {\n        this.cData = response.data;\n        this.setChartData();\n      })\n        .catch((response) => {\n          console.log(\"失败\" + response);\n        });\n    },\n    setChartData() {\n      const option = {\n        title: {\n          text: '热词图'\n        },\n        series: [{\n          type: 'wordCloud',\n          gridSize: 20,\n          sizeRange: [12, 50],\n          rotationRange: [-90, 90],\n          shape: 'pentagon',\n          textStyle: {\n            normal: {\n              color: function () {\n                return 'rgb(' + [\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160),\n                  Math.round(Math.random() * 160)\n                ].join(',') + ')';\n              }\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: '#333'\n            }\n          },\n          data: this.cData\n        }]\n      }\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = echarts.init(document.getElementById(\"keywordStatsChart\"));\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n    },\n  },\n};\n</script>\n\n"]}]}