{"remainingRequest":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/real/visitor.vue?vue&type=style&index=0&id=3e2014bf&lang=css","dependencies":[{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/real/visitor.vue","mtime":1672390204000},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/css-loader/dist/cjs.js","mtime":1749371729491},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1749371729849},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/postcss-loader/src/index.js","mtime":1749371729594},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js","mtime":1749371729670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgplbSB7CiAgZm9udC1zdHlsZTogbm9ybWFsOwogIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["visitor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA","file":"visitor.vue","sourceRoot":"src/views/statistics/real","sourcesContent":["<template  >\n  <div>\n\n    <el-table height=\"300\" :data=\"tableData\" style=\"width: 100%;font-size: 15px\"\n      :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\">\n\n      <el-table-column prop=\"type\" label=\"类别\">\n        <template slot-scope=\"scope\">\n          <div v-html=\"scope.row.type\"></div>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"newCount\" label=\"新用户\" width=\"150\">\n      </el-table-column>\n      <el-table-column prop=\"oldCount\" label=\"老用户\" width=\"150\">\n      </el-table-column>\n\n    </el-table>\n    <el-pagination :page-size=\"pageSize\" :pager-count=\"7\" @current-change=\"handleCurrentChange\"\n      :current-page.sync=\"curPageNo\" layout=\"total,prev, pager, next\" :total=\"total\">\n    </el-pagination>\n  </div>\n</template>\n\n<script>\nimport api from \"@/api/statistics/real/realtime\";\nexport default {\n\n  // 生命周期函数：内存准备完毕，页面渲染成功\n  mounted() {\n    this.init()\n  },\n\n  data() {\n    return {\n      itemName: \"\",\n      date: \"\",\n      pageSize: 20,\n      curPageNo: 1,\n      total: 0,\n      tableData: []\n    }\n  },\n  props: {\n    today: ''\n  },\n  methods: {\n    init() {\n      this.curPageNo = 1\n      api.getVisitorStatsByNewFlag(this.today)\n        .then((response) => {\n          this.tableData = response\n          this.total = response.total\n        })\n        .catch((response) => {\n          console.log(\"失败\" + response)\n        })\n      this.refreshTable()\n    },\n\n    refreshTable() {\n      // console.log(`刷新当前页: ${this.curPageNo}`);\n      // console.log(`刷新当前日期: ${this.date}`);\n      // console.log(`刷新当前商品关键词: ${this.itemName}`);\n      api.getVisitorStatsByNewFlag(this.today)\n        .then((response) => {\n          this.tableData = response\n          // this.total=response.total\n\n        })\n        .catch((response) => {\n          console.log(\"失败\" + response)\n        })\n\n    },\n\n    handleCurrentChange(val) {\n      this.refreshTable()\n    }\n  }\n}\n</script>\n\n<style>\nem {\n  font-style: normal;\n  color: red;\n}\n</style>\n"]}]}