{"remainingRequest":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/visit/trafficStats.vue?vue&type=style&index=0&id=03457ab0&scoped=true&lang=css","dependencies":[{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/src/views/statistics/visit/trafficStats.vue","mtime":1672390204000},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/css-loader/dist/cjs.js","mtime":1749371729491},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1749371729849},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/postcss-loader/src/index.js","mtime":1749371729594},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1749371729293},{"path":"/Users/chenchi03/IdeaProjects/yuntai-frontend/node_modules/vue-loader/lib/index.js","mtime":1749371729670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKZW0gewogIGZvbnQtc3R5bGU6IG5vcm1hbDsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["trafficStats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA","file":"trafficStats.vue","sourceRoot":"src/views/statistics/visit","sourcesContent":["<template>\n  <div>\n    <span slot=\"title_slot\">\n      各渠道流量统计\n    </span>\n\n    <el-table height=\"350\" :data=\"tableData\" style=\"width: 100%;font-size: 15px\"\n      :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\">\n      <el-table-column label=\"序号\" width=\"70\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ (page - 1) * limit + scope.$index + 1 }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"channel\" label=\"渠道\">\n        <template slot-scope=\"scope\">\n          <div v-html=\"scope.row.channel\"></div>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"uvCount\" label=\"访客人数\" width=\"150\">\n      </el-table-column>\n      <el-table-column prop=\"avgDurationSec\" label=\"会话平均停留时长\" width=\"300\">\n      </el-table-column>\n      <el-table-column prop=\"avgPagCount\" label=\"会话平均浏览页面数\" width=\"300\">\n      </el-table-column>\n      <el-table-column prop=\"svCount\" label=\"会话数\" width=\"150\">\n      </el-table-column>\n      <el-table-column prop=\"bounceRate\" label=\"跳出率\" width=\"150\">\n      </el-table-column>\n    </el-table>\n    <!-- 分页组件 -->\n    <el-pagination :current-page=\"page\" :total=\"total\" :page-size=\"limit\" :page-sizes=\"[5, 10, 20, 30, 40, 50, 100]\"\n      style=\"padding: 30px 0; text-align: center;\" layout=\"sizes, prev, pager, next, jumper, ->, total, slot\"\n      @current-change=\"fetchData\" @size-change=\"changeSize\" />\n  </div>\n</template>\n\n<script>\nimport api from \"@/api/statistics/visit/visit\";\n\nexport default {\n  data() {\n    return {\n      itemName: \"\",\n      date: \"\",\n      total: 0, // 数据库中的总记录数\n      page: 1, // 默认页码\n      limit: 10, // 每页记录数\n      tableData: [],\n      searchObj: {\n        recentDays: this.$parent.recentDays,\n        dt: this.$parent.curDate\n      }\n    }\n  },\n  // 生命周期函数：内存准备完毕，页面渲染成功\n  mounted() {\n    this.init()\n  },\n  methods: {\n    init() {\n      this.searchObj.recentDays = this.$parent.recentDays\n      this.searchObj.dt = this.$parent.curDate\n      this.fetchData(this.page)\n    },\n    // 当页码发生改变的时候\n    changeSize(size) {\n      console.log(size)\n      this.limit = size\n      this.fetchData(1)\n    },\n\n    // 加载banner列表数据\n    fetchData(page = 1) {\n      console.log('翻页。。。' + page);\n      // 异步获取远程数据（ajax）\n      this.page = page;\n      /**\n       * 各渠道流量统计接口\n       */\n      api.getTrafficStats(this.page, this.limit, this.searchObj)\n        .then((response) => {\n          this.tableData = response.data.records;\n          this.total = response.data.total;\n        })\n        .catch((response) => {\n          console.log(\"失败\" + response)\n        })\n    }\n  }\n}\n</script>\n\n<style scoped>\nem {\n  font-style: normal;\n  color: red;\n}\n</style>\n"]}]}